(()=>{"use strict";let e=JSON.parse(localStorage.getItem("lastClickedLatLon"))||[55.752318,37.619814],t=L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors'}),o=L.tileLayer("http://{s}.tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png",{attribution:'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors'}),n=L.tileLayer("https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',subdomains:"abcd"}),a=L.tileLayer("https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>'}),l=L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"}),i=L.tileLayer("https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.{ext}",{attribution:'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',subdomains:"abcd",minZoom:0,maxZoom:20,ext:"png"}),r=L.tileLayer("https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.{ext}",{attribution:'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',subdomains:"abcd",minZoom:0,maxZoom:20,ext:"png"}),c=L.tileLayer("https://tiles.stadiamaps.com/tiles/osm_bright/{z}/{x}/{y}{r}.png",{maxZoom:20,attribution:'&copy; <a href="https://stadiamaps.com/">Stadia Maps</a>, &copy; <a href="https://openmaptiles.org/">OpenMapTiles</a> &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors'}),s=L.tileLayer("https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png",{maxZoom:20,attribution:'&copy; <a href="https://stadiamaps.com/">Stadia Maps</a>, &copy; <a href="https://openmaptiles.org/">OpenMapTiles</a> &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors'}),d=L.tileLayer("https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png",{attribution:'<a href="https://wikimediafoundation.org/wiki/Maps_Terms_of_Use">Wikimedia</a>'}),p=L.map("map",{center:e,maxZoom:18,zoom:10,layers:[t]}),u={OpenStreetMap:t,"OpenStreetMap Black And White":o,"CartoDB.Positron":a,"CartoDB.Voyager":n,"Esri.WorldImagery":l,"Stamen.Toner":i,"Stamen.TonerBackground":r,"Stadia.OSMBright":c,"Stadia.AlidadeSmooth":s,Wikimedia:d};L.control.layers(u,null,{position:"bottomright"}).addTo(p),L.control.scale().addTo(p),p.on("click",(e=>{localStorage.setItem("lastClickedLatLon",JSON.stringify([e.latlng.lat,e.latlng.lng]))}));let m=!0,y=[];function f(e,t,o){let n=[],a=null;function l(){let t=n.shift();t&&e.apply(t.context,t.arguments),0===n.length&&(clearInterval(a),a=null)}return function(){n.push({context:o||this,arguments:[].slice.call(arguments)}),a||(a=setInterval(l,t))}}let g=f((function(e,t){y.filter((t=>t.lat===e)).find((e=>e.lon===t))||fetch(`https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${e}&lon=${t}`).then((function(e){return e.json()})).then((function(o){let n={lat:e,lon:t,address:o.display_name};y.push(n)}))}),1100),h=f((function(e,t){let o=t.findIndex((t=>t.id===e));o>=0&&t[o].leaflet_object.getLayers().filter((e=>e instanceof L.Marker)).forEach((e=>{let t=e.options.latLon[0],o=e.options.latLon[1],n=y.filter((e=>e.lat===t)).find((e=>e.lon===o)).address;if(n){let t=e.getPopup().getContent(),o=`<div class="popup-row"><div class="popup-col-1">Address:</div><div class="popup-col-2"><small>${n}</small></div></div>`;e.getPopup().setContent(t+o)}}))}),5500);function b(e,t,o=1,n=1,a,l,i=0,r=0,c=0){return`<div class="popup-row"><div class="popup-col-1">ID:</div><div class="popup-col-2">${e}</div></div><div class="popup-row"><div class="popup-col-1">Type:</div><div class="popup-col-2">${t}</div></div><div class="popup-row"><div class="popup-col-1">Points:</div><div class="popup-col-2">${o} / ${n}</div></div><div class="popup-row"><div class="popup-col-1">Lat, Lon:</div><div class="popup-col-2"><strong>${a}, ${l}</strong></div></div>${0!==i?`<div class="popup-row"><div class="popup-col-1">Radius:</div><div class="popup-col-2">${i}</div></div>`:""}`}window.mdc.autoInit();let v=new mdc.switchControl.MDCSwitch(document.getElementById("b-marker-switch"));v.checked=!0,v.listen("change",(function(e){var t;t=e.target.checked,m=t}));let k=new mdc.snackbar.MDCSnackbar(document.getElementById("b-mdc-snackbar")),S=document.getElementById("b-mdc-snackbar-content");k.timeoutMs=7500;const w=e=>{"addArray"===e.type?S.innerHTML=`Added <strong>${e.payload.points}</strong> point(s), <strong>${e.payload.circles}</strong> circle(s), <strong>${e.payload.polylines}</strong> polyline(s) and <strong>${e.payload.polygones}</strong> polygone(s).<br>Skipped <strong>${e.payload.skipped}</strong> element(s).`:"clipboardCopyResult"===e.type&&(S.innerHTML=e.text)};let M=new mdc.tabBar.MDCTabBar(document.querySelector(".mdc-tab-bar")),T=document.querySelectorAll(".mdc-tab-content"),x=["point","circle","line","array"],C="point",A=document.getElementById("hint-about-tabs");M.listen("MDCTabBar:activated",(function(e){var t;C=x[e.detail.index],document.querySelector(".mdc-tab-content--active").classList.remove("mdc-tab-content--active"),T[e.detail.index].classList.add("mdc-tab-content--active"),history.pushState("","","?tab="+C),A.innerHTML="point"===(t=C)?"<p>You can add point by holding down the <kbd>shift</kbd> key while left-clicking on the map.</p><p>Click once to add one point.</p>":"circle"===t?"<p>You can add circle by holding down the <kbd>shift</kbd> key while left-clicking on the map.</p><p>Click twice — first time to add center point and second for circle edge.</p>":"line"===t?"<p>You can add line, polyline or polygon by holding down the <kbd>shift</kbd> key while left-clicking on the map.</p><p>Click on any temp marker to finish. If you click first marker at last it will be polygon, otherwise it will be polyline.</p>":"array"===t?'<p>Array of objects: <code>[{obj_1}, {obj_2}, ..., {obj_n}]</code>.<a href="https://github.com/bazhanius/simple-geo-tool/#add-array-of-coordinates-via-text-field">Learn more</a>.</p>':""}));const E=()=>C;let P=new URLSearchParams(location.search),O=P.get("tab"),B=P.get("addArray");if("point"===O)M.activateTab(0),C="point";else if("circle"===O)M.activateTab(1),C="circle";else if("line"===O)M.activateTab(2),C="line";else if("array"===O){if(M.activateTab(3),C="array",B&&dF.isJSON(B)){let e=manageObjects.addArray(B);e.payload.points+e.payload.circles+e.payload.polylines+e.payload.polygones>0&&manageObjects.showAll(),w(e),k.close(),k.open()}}else history.pushState({},null,location.href.split("?")[0]);const j=document.querySelector("#b-mdc-modal-window"),_=new mdc.dialog.MDCDialog(j);j.querySelector("#dialog-confirm").onclick=function(){$("https://yandex.com/support/common/browsers-settings/"),_.close()},j.querySelector("#dialog-cancel").onclick=function(){_.close()};const N=(e,t)=>{navigator.clipboard.writeText(e).then((function(){w({type:"clipboardCopyResult",text:`JSON data of <strong>${t}</strong> copied to clipboard successfully!`}),k.close(),k.open()}),(function(){w({type:"clipboardCopyResult",text:`JSON data of <strong>${t}</strong> copying to clipboard failed!`}),k.close(),k.open()}))},$=e=>{window.open(e,"_blank").focus()},I=e=>void 0===e?"—":e.toString().replace(/\B(?=(\d{3})+(?!\d))/g," "),q=e=>e>1e4?{value:(e/1e3).toFixed(2),unit:"km"}:{value:e.toFixed(0),unit:"m"},D=e=>!isNaN(e)&&""!==e&&Math.abs(e)<=90,z=e=>!isNaN(e)&&""!==e&&Math.abs(e)<=180,F=function(){let e=document.querySelector("#point-lat"),t=document.querySelector("#point-lon"),o=document.querySelector("#circle-lat"),n=document.querySelector("#circle-lon"),a=document.querySelector("#circle-radius"),l=document.querySelector("#line-lat-1"),i=document.querySelector("#line-lon-1"),r=document.querySelector("#line-lat-2"),c=document.querySelector("#line-lon-2"),s=document.querySelector("#array-of-coordinates");return{getNodeList:function(d){return"point"===d?[e,t]:"circle"===d?[o,n,a]:"line"===d?[l,i,r,c]:"array"===d?[s]:[]},getValues:function(d){return"point"===d?{lat:e.value,lon:t.value}:"circle"===d?{lat:o.value,lon:n.value,rad:a.value}:"line"===d?{latOne:l.value,lonOne:i.value,latTwo:r.value,lonTwo:c.value}:"array"===d?{arrayList:s.value}:{}},clearValues:function(d){"point"===d?(e.value="",t.value=""):"circle"===d?(o.value="",n.value="",a.value=""):"line"===d?(l.value="",i.value="",r.value="",c.value=""):"array"===d&&(s.value="")},validateValues:function(e){if("point"===e){let e=[0,0,0],t=F.getValues("point");return D(t.lat)?e[0]=1:e[0]=0,z(t.lon)?e[1]=1:e[1]=0,t.lat||t.lon?e[2]=1:e[2]=0,e}if("circle"===e){let e=[0,0,0,0],t=F.getValues("circle");return D(t.lat)?e[0]=1:e[0]=0,z(t.lon)?e[1]=1:e[1]=0,t.rad&&!isNaN(t.rad)&&t.rad>0&&t.rad<=1e6?e[2]=1:e[2]=0,t.lat||t.lon||t.rad?e[3]=1:e[3]=0,e}if("line"===e){let e=[0,0,0,0,0],t=F.getValues("line");return D(t.latOne)?e[0]=1:e[0]=0,z(t.lonOne)?e[1]=1:e[1]=0,D(t.latTwo)?e[2]=1:e[2]=0,z(t.lonTwo)?e[3]=1:e[3]=0,t.latOne||t.lonOne||t.latTwo||t.lonTwo?e[4]=1:e[4]=0,e}if("array"===e){let e=[0,0,0],t=F.getValues("array"),o=new RegExp(/^[0-9a-z\ \s*\.\,\-\[\]\{\}\"\:]*$/i);return t.arrayList&&o.test(t.arrayList)?e[0]=1:e[0]=0,t.arrayList?e[1]=1:e[1]=0,(e=>{if(e.length<5||!e.startsWith("["))return!1;try{return JSON.parse(e)}catch(e){return!1}})(t.arrayList)?e[2]=1:e[2]=0,e}return[]}}}();F.getNodeList("point").forEach((function(e){e.addEventListener("keyup",(function(){H.toggleAddToMapButtons("point")}))})),F.getNodeList("circle").forEach((function(e){e.addEventListener("keyup",(function(){H.toggleAddToMapButtons("circle")}))})),F.getNodeList("line").forEach((function(e){e.addEventListener("keyup",(function(){H.toggleAddToMapButtons("line")}))})),F.getNodeList("array").forEach((function(e){e.addEventListener("keyup",(function(){H.toggleAddToMapButtons("array")}))}));const H=function(){let e=document.querySelector("#button-add-to-map"),t=document.querySelector("#button-clear-fields"),o=document.querySelector("#button-objects-copy-all"),n=document.querySelector("#button-objects-zoom-all"),a=document.querySelector("#button-objects-delete-all");return{applyClickEvents:function(){e.addEventListener("click",(function(){let e,t,o=E(),n=F.getValues(o);"point"===o?e=be.add({type:"point",coords:[{lat:n.lat,lon:n.lon}]}):"circle"===o?e=be.add({type:"circle",coords:[{lat:n.lat,lon:n.lon}],radius:n.rad}):"line"===o?e=be.add({type:"polyline",coords:[{lat:n.latOne,lon:n.lonOne},{lat:n.latTwo,lon:n.lonTwo}]}):"array"===o&&(t=be.addArray(n.arrayList)),"array"!==o?be.locateByObjectID(e):(t.payload.points+t.payload.circles+t.payload.polylines+t.payload.polygones>0&&be.showAll(),w(t),k.close(),k.open())})),t.addEventListener("click",(function(){let e=E();F.clearValues(e),H.toggleAddToMapButtons(e)})),o.addEventListener("click",(function(){be.copyAllToClipboard()})),n.addEventListener("click",(function(){be.showAll()})),a.addEventListener("click",(function(){be.deleteAll()}))},updateObjectsManagementButtons:function(){let e=document.querySelectorAll(".button-object-copy"),t=document.querySelectorAll(".button-object-locate"),o=document.querySelectorAll(".button-object-delete");e.forEach((function(e){e.addEventListener("click",(function(){be.copyToClipboardByNode(this)}))})),t.forEach((function(e){e.addEventListener("click",(function(){be.locateByNode(this)}))})),o.forEach((function(e){e.addEventListener("click",(function(){be.delete(this),H.toggleObjectListButton()}))}))},toggleAddToMapButtons:function(o){let n=F.validateValues(o);e.disabled=n.indexOf(0)>-1,t.disabled=n.indexOf(1)<=-1},toggleObjectListButton:function(){let e=document.querySelector("#objects-list");he.length>0?(o.disabled=!1,n.disabled=!1,a.disabled=!1,e.style.visibility="visible"):(o.disabled=!0,n.disabled=!0,a.disabled=!0,e.style.visibility="hidden")}}}();document.querySelectorAll(".mdc-tab").forEach((function(e){e.addEventListener("click",(function(){let e=this.getAttribute("data-tab-name");H.toggleAddToMapButtons(e),Y=[],K.clearLayers(),V&&(V.remove(),V=void 0),J&&(J.remove(),J=void 0),U&&(U.remove(),U=void 0),G&&(G.remove(),G=void 0)}))}));const R=L.Control.extend({onAdd:e=>{const t=L.DomUtil.create("div");return t.innerHTML='<div class="mouse-cursor-helper"><p id="mouse-coordinates">0, 0</p><p id="temp-object-summary"></p></div>',t}});p.addControl(new R({position:"topright"}));let U,G,V,J,Z=document.querySelector("#mouse-coordinates"),W=document.querySelector("#temp-object-summary"),Y=[],K=(new L.featureGroup).addTo(p),X=L.divIcon({className:"marker-icon-pin",html:"<div class='marker-pin marker-point-temp-color'></div><b>+</b>",iconSize:[30,42],iconAnchor:[15,42]}),Q=L.divIcon({className:"marker-icon-dot marker-point-temp-color",iconSize:[4,4],iconAnchor:[3,3]}),ee=!1;function te(e){ee=e.shiftKey,ee?L.DomUtil.addClass(p._container,"crosshair-cursor-enabled"):L.DomUtil.removeClass(p._container,"crosshair-cursor-enabled")}window.addEventListener("keydown",te,!1),window.addEventListener("keypress",te,!1),window.addEventListener("keyup",te,!1);const oe=e=>{let t=Y[0].lat===e[0]&&Y[0].lon===e[1]&&Y.length>2?"polygon":"polyline";be.add({type:t,coords:Y}),K.clearLayers(),Y=[],U.remove(),G.remove(),J.remove(),J=void 0};p.on("click",(function(e){if(ee&&"array"!==C){let t=E();if(Y.push({lat:parseFloat(e.latlng.lat).toFixed(6),lon:parseFloat(e.latlng.lng).toFixed(6)}),"point"===t&&ee&&(be.add({type:"point",coords:Y}),Y=[]),"circle"===t&&ee&&(1===Y.length?(V=L.circle([Y[0].lat,Y[0].lon],{radius:0,weight:2,color:"#ff3",opacity:.8,fillOpacity:.1}).addTo(p),K.addLayer(L.marker([Y[0].lat,Y[0].lon],{icon:X})),K.addLayer(L.marker([Y[0].lat,Y[0].lon],{icon:Q}))):Y.length>=2&&(be.add({type:"circle",radius:parseFloat(L.latLng([Y[0].lat,Y[0].lon]).distanceTo([Y[1].lat,Y[1].lon])).toFixed(0),coords:Y.splice(0,1)}),K.clearLayers(),Y=[],V.remove())),"line"===t&&ee){let e=Y.length-1;J?J.setLatLngs(Y):J=L.polyline(Y,{color:"#ff3",weight:2,opacity:.6}).addTo(p),K.addLayer(L.marker([Y[e].lat,Y[e].lon],{icon:X}).on("click",(()=>{oe([Y[e].lat,Y[e].lon])}))),K.addLayer(L.marker([Y[e].lat,Y[e].lon],{icon:Q}).on("click",(t=>{oe([Y[e].lat,Y[e].lon])}))),U?U.setLatLng([Y[e].lat,Y[e].lon]):U=L.marker([Y[e].lat,Y[e].lon],{icon:X}).addTo(p),G?G.setLatLng([Y[e].lat,Y[e].lon]):G=L.marker([Y[e].lat,Y[e].lon],{icon:Q}).addTo(p)}}})),p.on("mousemove",(e=>{let t=parseFloat(e.latlng.lat).toFixed(6),o=parseFloat(e.latlng.lng).toFixed(6);if(!Y[0]&&ee&&J&&"array"!==C&&(U.setLatLng([t,o]),G.setLatLng([t,o])),Y[0]){let e=L.latLng([Y[0].lat,Y[0].lon]).distanceTo([t,o]).toFixed(0);Z.innerHTML=`<span class="mdi mdi-map-marker mdi-12px"></span> ${Y[0].lat}, ${Y[0].lon}`,W.innerHTML=`<span class="mdi mdi-crosshairs mdi-12px"></span> ${t}, ${o}`,W.innerHTML+=`<br>${I(e)} m`,V&&V.setRadius(e),J&&(U.setLatLng([t,o]),G.setLatLng([t,o]),J.setLatLngs(Y.concat({lat:t,lon:o})))}else Z.innerHTML=`<span class="mdi mdi-crosshairs mdi-12px"></span> ${t}, ${o}`,W.innerHTML=""}));const ne=L.Control.extend({onAdd:e=>{const t=L.DomUtil.create("div");return L.DomEvent.disableClickPropagation(t),t.innerHTML='<div class="ruler-control"><div class="ruler-control-polyline mdi mdi-ruler mdi-18px" title="Ruler"></div></div>',t}});p.addControl(new ne({position:"topleft"})),p.createPane("rulerLinesPane"),p.getPane("rulerLinesPane").style.zIndex=650,p.createPane("rulerMarkersPane"),p.getPane("rulerMarkersPane").style.zIndex=651;const ae=document.querySelector(".ruler-control-polyline");let le=!1,ie=(new L.featureGroup).addTo(p),re=[],ce=null;const se=()=>{ie.addLayer(L.polyline([],{className:"ruler-polyline-path-bg",pane:"rulerLinesPane"}).addTo(p)),ie.addLayer(L.polyline([],{className:"ruler-polyline-path",pane:"rulerLinesPane"}).addTo(p))};function de(){ie.eachLayer((function(e){e instanceof L.Marker&&e.closePopup()}))}function pe(){me()}function ue(){me(),fe(ce._leaflet_id)}se(),ae.addEventListener("click",(function(){!1===le?(ae.classList.add("ruler-control__active"),L.DomUtil.addClass(p._container,"crosshair-cursor-enabled"),le=!0,be.disableAllPopups()):(ae.classList.remove("ruler-control__active"),L.DomUtil.removeClass(p._container,"crosshair-cursor-enabled"),le=!1,ie.clearLayers(),se(),re=[],be.enableAllPopups())}));const me=(e,t)=>{if(e&&t){let o=L.divIcon({className:"marker-icon-pin",html:"<div class='ruler-marker-pin'></div>",iconSize:[15,15],iconAnchor:[0,0]}),n=L.marker([e,t],{icon:o,draggable:!0,pane:"rulerMarkersPane"}).on("dragstart",de).on("drag",pe).on("dragend",ue).on("popupopen",(e=>{fe(e.popup._source._leaflet_id)})).addTo(p);ie.addLayer(n)}re=(e=>{let t=[];return e.eachLayer((function(e){e instanceof L.Marker&&t.push(e.getLatLng())})),[t]})(ie),ie.eachLayer((function(e){e instanceof L.Polyline&&e.setLatLngs(re)})),ye()},ye=()=>{let e=0,t=null;ie.eachLayer((function(o){if(o instanceof L.Marker){let n=o.getLatLng();t&&(e+=t.distanceTo(n)),t=n;let a=function(e,t){let o=q(e);return`<strong>${I(o.value)} ${o.unit}</strong><span id="ruler-id-${t}" class="mdi mdi-icon-button mdi-delete-forever mdi-12px"></span>`}(e,o._leaflet_id),l=o.getPopup();l?l.setContent(a):o.bindPopup(a,{className:"ruler-marker-pin-popup",offset:[0,-12],minWidth:20,closeButton:!1,autoClose:!1}).addTo(p),ce=o}})),ce&&ce.openPopup()},fe=e=>{let t=document.querySelector("#ruler-id-"+e);t&&t.addEventListener("click",(function(){ie.removeLayer(e),me()}))};p.on("click",(function(e){le&&!ee&&me(e.latlng.lat,e.latlng.lng)}));let ge=0,he=[],Le=document.querySelector("#objects-list > tbody");const be={add:function(e){let t=e.type,o=e.coords,n=e.radius?e.radius:null,a="";if(t&&o){ge++;let l,i=[],r=L.divIcon({className:"marker-icon-pin",html:"<div class='marker-pin marker-"+t+"-color'></div><b>"+ge+"</b>",iconSize:[30,42],iconAnchor:[15,42]}),c=L.divIcon({className:"marker-icon-dot marker-"+t+"-color",iconSize:[4,4],iconAnchor:[3,3]});if("point"===t){let e=o[0].lat,t=o[0].lon;i.push(L.marker([e,t],{id:ge,points:[1,1],latLon:[e,t],icon:c}).bindPopup(b(ge,"Point",1,1,e,t))),m&&i.push(L.marker([e,t],{id:ge,points:[1,1],latLon:[e,t],icon:r}).bindPopup(b(ge,"Point",1,1,e,t))),g(e,t)}if("circle"===t){a=n;let e=o[0].lat,t=o[0].lon;i.push(L.circle([e,t],{radius:n,weight:2}),L.marker([e,t],{id:ge,points:[1,1],latLon:[e,t],radius:n,icon:c}).bindPopup(b(ge,"Circle",1,1,e,t,a))),m&&i.push(L.marker([e,t],{id:ge,points:[1,1],latLon:[e,t],radius:n,icon:r}).bindPopup(b(ge,"Circle",1,1,e,t,a))),g(e,t)}if("polyline"===t){let e=o.length,t=[];o.forEach(((o,n)=>{let a=o.lat,l=o.lon;t.push([a,l]),i.push(L.marker([a,l],{id:ge,points:[n+1,e],latLon:[a,l],icon:c}).bindPopup(b(ge,"Polyline",n+1,e,a,l))),m&&i.push(L.marker([a,l],{id:ge,points:[n+1,e],latLon:[a,l],icon:r}).bindPopup(b(ge,"Polyline",n+1,e,a,l))),g(a,l)})),a=((e,t)=>{let o={m:0,km:0},n=null;return e.forEach(((e,t)=>{let a=e[0],l=e[1];n&&(o.m+=L.latLng(n).distanceTo([a,l])),n=[a,l]})),o.km=Math.round(o.m/1e3*100)/100,o.m=Math.round(100*o.m)/100,t in o?o[t]:o})(t),i.push(L.polyline(t,{color:"#f33",weight:2}))}if("polygon"===t){let e=o.length,t=[];o.forEach(((o,n)=>{let a=o.lat,l=o.lon;t.push([a,l]),i.push(L.marker([a,l],{id:ge,points:[n+1,e],latLon:[a,l],icon:c}).bindPopup(b(ge,"Polygon",n+1,e,a,l))),m&&i.push(L.marker([a,l],{id:ge,points:[n+1,e],latLon:[a,l],icon:r}).bindPopup(b(ge,"Polygon",n+1,e,a,l))),g(a,l)})),a=((e,t)=>{let o=e.length,n={m2:0,km2:0,ft2:0,mi2:0,ac:0},a=o-1;for(let t=0;t<o;t++){let o=111319.5*e[a][0],l=111319.5*e[t][0],i=e[a][1]*(40075e3*Math.cos(e[a][0]*Math.PI/180)/360),r=e[t][1]*(40075e3*Math.cos(e[t][0]*Math.PI/180)/360);n.m2=n.m2+(o+l)*(i-r),a=t}return n.m2=Math.round(100*Math.abs(n.m2/2))/100,n.km2=Math.round(n.m2/1e6*100)/100,n.ft2=Math.round(10.76391*n.m2*100)/100,n.mi2=Math.round(3.8610216e-7*n.m2*100)/100,n.ac=Math.round(24711e-8*n.m2*100)/100,t in n?n[t]:n})(t),i.push(L.polygon(t,{color:"#080",weight:2}))}l=new L.featureGroup(i).addTo(p),Le.innerHTML+=function(e,t,o){let n="";if("circle"===t){let e=q(parseFloat(o));n=`≈ ${I(e.value)} ${e.unit}`}if("polyline"===t){let e=q(o.m);n=`≈ ${I(e.value)} ${e.unit}`}return"polygon"===t&&(n=o.m2>1e4?`≈ ${I(o.km2)} km<sup>2</sup>`:`≈ ${I(o.m2)} m<sup>2</sup>`),`<tr><td>${e}</td><td>${t}</td><td>${n}</td><td><button class="mdc-button button-object-copy" title="Copy JSON to clipboard"><span class="mdc-button__ripple"></span><span class="mdi mdi-icon-button mdi-content-copy mdi-18px"></span></button><button class="mdc-button button-object-locate" title="Locate on the map"><span class="mdc-button__ripple"></span><span class="mdi mdi-icon-button mdi-crosshairs-gps mdi-18px"></span></button><button class="mdc-button button-object-delete"  title="Delete object"><span class="mdc-button__ripple"></span><span class="mdi mdi-icon-button mdi-delete-forever mdi-18px"></span></button></td></tr>`}(ge,t,a);let s={id:ge,type:t,object:e,leaflet_object:l,measurements:a};he.push(s),H.updateObjectsManagementButtons(),H.toggleObjectListButton(),h(ge,he),le&&be.disableAllPopups()}return ge},addArray:function(e){let t={type:"addArray",payload:{points:0,circles:0,polylines:0,polygones:0,skipped:0}};return JSON.parse(e).forEach(((e,o)=>{e.type&&e.coords?be.add(e)>0?"point"===e.type?t.payload.points+=1:"circle"===e.type?t.payload.circles+=1:"polyline"===e.type?t.payload.polylines+=1:"polygon"===e.type&&(t.payload.polygones+=1):t.payload.skipped+=1:t.skipped+=1})),t},delete:function(e){let t=e.parentNode.parentNode,o=parseInt(t.firstChild.textContent),n=he.findIndex((e=>e.id===o));he[n].leaflet_object.clearLayers(),he.splice(n,1),t.remove()},copyAllToClipboard:function(){let e=[];he.forEach((function(t){e.push(t.object)})),N(JSON.stringify(e),"all objects")},copyToClipboardByNode:function(e){let t=e.parentNode.parentNode,o=parseInt(t.firstChild.textContent),n=he.findIndex((e=>e.id===o));N("["+JSON.stringify(he[n].object)+"]",he[n].type)},locateByNode:function(e){let t=e.parentNode.parentNode,o=parseInt(t.firstChild.textContent),n=he.findIndex((e=>e.id===o));p.flyToBounds(he[n].leaflet_object.getBounds(),{padding:L.point(100,100)})},locateByObjectID:function(e){let t=he.findIndex((t=>t.id===e));"point"===he[t].type?p.flyToBounds(he[t].leaflet_object.getBounds(),{maxZoom:12}):p.flyToBounds(he[t].leaflet_object.getBounds(),{padding:L.point(100,100)})},deleteAll:function(){he.forEach((function(e){e.leaflet_object.clearLayers()})),he=[],Le.innerHTML="",H.toggleObjectListButton()},showAll:function(){let e=[];if(he.forEach((function(t){e.push(t.leaflet_object)})),e.length){let t=new L.featureGroup(e);p.flyToBounds(t.getBounds(),{padding:L.point(30,30)})}},disableAllPopups:function(){he.forEach((function(e){e.leaflet_object.eachLayer((function(e){e instanceof L.Marker&&e.off("click")}))}))},enableAllPopups:function(){he.forEach((function(e){e.leaflet_object.eachLayer((function(e){e instanceof L.Marker&&e.on("click",(function(){e.getPopup()&&e.openPopup()}))}))}))}},ve=L.Control.extend({onAdd:e=>{const t=L.DomUtil.create("div");return L.DomEvent.disableClickPropagation(t),t.innerHTML='<div class="user-location-control"><span class="mdi mdi-near-me mdi-18px" title="My location"></span></div>',t}});p.addControl(new ve({position:"topleft"}));const ke=document.querySelector(".user-location-control"),Se=ke.getElementsByTagName("SPAN")[0];ke.addEventListener("click",(function(){we()}));const we=()=>{Se.classList.remove("mdi-near-me"),Se.classList.add("mdi-loading","mdi-spin");let e=[];navigator.geolocation.getCurrentPosition((function(t){e=[t.coords.latitude,t.coords.longitude,t.coords.accuracy],p.setView([e[0],e[1]],10);let o=be.add({type:"circle",coords:[{lat:e[0],lon:e[1]}],radius:e[2]});be.locateByObjectID(o),Se.classList.remove("mdi-loading","mdi-spin"),Se.classList.add("mdi-near-me")}),(function(e){console.warn(`ERROR(${e.code}): ${e.message}`),Se.classList.remove("mdi-loading","mdi-spin"),Se.classList.add("mdi-near-me"),_.open()}),{enableHighAccuracy:!0,timeout:5e3,maximumAge:0})};document.addEventListener("DOMContentLoaded",(function(){H.applyClickEvents(),H.toggleAddToMapButtons(E()),H.toggleObjectListButton()}))})();